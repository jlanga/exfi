#!/usr/bin/env python3

from exfi.io import \
    index_fasta

import pandas as pd
import networkx as nx

bed6_cols = ["chrom", "start", "end", "name", "score", "strand"]

bed3records_empty = []
bed3records_simple = [
    ("ENSDART00000161035.1", 0, 326)
]
bed3records_complex = [
    ("ENSDART00000161035.1", 397, 472,),
    ("ENSDART00000165342.1", 1176, 1324),
    ("ENSDART00000161035.1", 0, 326),
    ("ENSDART00000165342.1", 125, 304),
    ("ENSDART00000165342.1", 746, 851),
    ("ENSDART00000165342.1", 974, 1097),
    ("ENSDART00000165342.1", 854, 886),
    ("ENSDART00000165342.1", 1098, 1175),
    ("ENSDART00000165342.1", 5, 127),
    ("ENSDART00000165342.1", 645, 746),
    ("ENSDART00000165342.1", 317, 460),
    ("ENSDART00000165342.1", 591, 650),
    ("ENSDART00000165342.1", 459, 592),
    ("ENSDART00000165342.1", 899, 953),
    ("ENSDART00000161035.1", 477, 523)
]

bed6df_empty = pd.DataFrame(
    columns=bed6_cols
)
bed6df_simple = pd.DataFrame(
    data=[("ENSDART00000161035.1", 0, 326, "ENSDART00000161035.1:0-326", 0, "+" )],
    columns=bed6_cols
)
bed6df_complex = pd.DataFrame(
        data=[
            ["ENSDART00000161035.1", 397, 472, "ENSDART00000161035.1:397-472", 0, "+"],
            ["ENSDART00000165342.1", 1176, 1324, "ENSDART00000165342.1:1176-1324", 0, "+"],
            ["ENSDART00000161035.1", 0, 326, "ENSDART00000161035.1:0-326", 0, "+"],
            ["ENSDART00000165342.1", 125, 304, "ENSDART00000165342.1:125-304", 0, "+"],
            ["ENSDART00000165342.1", 746, 851, "ENSDART00000165342.1:746-851", 0, "+"],
            ["ENSDART00000165342.1", 974, 1097, "ENSDART00000165342.1:974-1097", 0, "+"],
            ["ENSDART00000165342.1", 854, 886, "ENSDART00000165342.1:854-886", 0, "+"],
            ["ENSDART00000165342.1", 1098, 1175, "ENSDART00000165342.1:1098-1175", 0, "+"],
            ["ENSDART00000165342.1", 5, 127, "ENSDART00000165342.1:5-127", 0, "+"],
            ["ENSDART00000165342.1", 645, 746, "ENSDART00000165342.1:645-746", 0, "+"],
            ["ENSDART00000165342.1", 317, 460, "ENSDART00000165342.1:317-460", 0, "+"],
            ["ENSDART00000165342.1", 591, 650, "ENSDART00000165342.1:591-650", 0, "+"],
            ["ENSDART00000165342.1", 459, 592, "ENSDART00000165342.1:459-592", 0, "+"],
            ["ENSDART00000165342.1", 899, 953, "ENSDART00000165342.1:899-953", 0, "+"],
            ["ENSDART00000161035.1", 477, 523, "ENSDART00000161035.1:477-523", 0, "+"],
        ],
        columns=bed6_cols
    )\
    .sort_values(bed6_cols[0:3])

node2coords_empty = {}
node2coords_simple = {
    'ENSDART00000161035.1:0-326': ('ENSDART00000161035.1', 0, 326)
}
node2coords_complex = {
    'ENSDART00000161035.1:0-326': ('ENSDART00000161035.1', 0, 326),
    'ENSDART00000161035.1:397-472': ('ENSDART00000161035.1', 397, 472),
    'ENSDART00000161035.1:477-523': ('ENSDART00000161035.1', 477, 523),
    'ENSDART00000165342.1:5-127': ('ENSDART00000165342.1', 5, 127),
    'ENSDART00000165342.1:125-304': ('ENSDART00000165342.1', 125, 304),
    'ENSDART00000165342.1:317-460': ('ENSDART00000165342.1', 317, 460),
    'ENSDART00000165342.1:459-592': ('ENSDART00000165342.1', 459, 592),
    'ENSDART00000165342.1:591-650': ('ENSDART00000165342.1', 591, 650),
    'ENSDART00000165342.1:645-746': ('ENSDART00000165342.1', 645, 746),
    'ENSDART00000165342.1:746-851': ('ENSDART00000165342.1', 746, 851),
    'ENSDART00000165342.1:854-886': ('ENSDART00000165342.1', 854, 886),
    'ENSDART00000165342.1:899-953': ('ENSDART00000165342.1', 899, 953),
    'ENSDART00000165342.1:974-1097': ('ENSDART00000165342.1', 974, 1097),
    'ENSDART00000165342.1:1098-1175': ('ENSDART00000165342.1', 1098, 1175),
    'ENSDART00000165342.1:1176-1324': ('ENSDART00000165342.1', 1176, 1324)
}

path_empty = {}
path_simple = {"ENSDART00000161035.1": ("ENSDART00000161035.1:0-326",)}
path_complex = {
    "ENSDART00000161035.1": (
        "ENSDART00000161035.1:0-326",
        "ENSDART00000161035.1:397-472",
        "ENSDART00000161035.1:477-523",
    ),
    "ENSDART00000165342.1": (
        "ENSDART00000165342.1:5-127",
        "ENSDART00000165342.1:125-304",
        "ENSDART00000165342.1:317-460",
        "ENSDART00000165342.1:459-592",
        "ENSDART00000165342.1:591-650",
        "ENSDART00000165342.1:645-746",
        "ENSDART00000165342.1:746-851",
        "ENSDART00000165342.1:854-886",
        "ENSDART00000165342.1:899-953",
        "ENSDART00000165342.1:974-1097",
        "ENSDART00000165342.1:1098-1175",
        "ENSDART00000165342.1:1176-1324",
    )
}

overlaps_empty = {}
overlaps_simple = {}
overlaps_complex = {
    ("ENSDART00000161035.1:0-326", "ENSDART00000161035.1:397-472"): -71,
    ("ENSDART00000161035.1:397-472", "ENSDART00000161035.1:477-523"): -5,
    ("ENSDART00000165342.1:5-127", "ENSDART00000165342.1:125-304"): 2,
    ("ENSDART00000165342.1:125-304", "ENSDART00000165342.1:317-460"): -13,
    ("ENSDART00000165342.1:317-460", "ENSDART00000165342.1:459-592"): 1,
    ("ENSDART00000165342.1:459-592", "ENSDART00000165342.1:591-650"): 1,
    ("ENSDART00000165342.1:591-650", "ENSDART00000165342.1:645-746"): 5,
    ("ENSDART00000165342.1:645-746", "ENSDART00000165342.1:746-851"): 0,
    ("ENSDART00000165342.1:746-851", "ENSDART00000165342.1:854-886"): -3,
    ("ENSDART00000165342.1:854-886", "ENSDART00000165342.1:899-953"): -13,
    ("ENSDART00000165342.1:899-953", "ENSDART00000165342.1:974-1097"): -21,
    ("ENSDART00000165342.1:974-1097", "ENSDART00000165342.1:1098-1175"): -1,
    ("ENSDART00000165342.1:1098-1175", "ENSDART00000165342.1:1176-1324"): -1
}

splice_graph_empty = nx.DiGraph()

splice_graph_simple = nx.DiGraph()
splice_graph_simple.add_nodes_from(bed6df_simple["name"].tolist())
nx.set_node_attributes(
    G=splice_graph_simple,
    name="coordinates",
    values=node2coords_simple
)
for path in path_simple.values():
    splice_graph_simple.add_path(path)
nx.set_edge_attributes(
    G=splice_graph_simple,
    name="overlaps",
    values=overlaps_simple
)

splice_graph_complex = nx.DiGraph()
splice_graph_complex.add_nodes_from(bed6df_complex["name"].tolist())
nx.set_node_attributes(
    G=splice_graph_complex,
    name="coordinates",
    values=node2coords_complex
)
for path in path_complex.values():
    splice_graph_complex.add_path(path)
nx.set_edge_attributes(
    G=splice_graph_complex, name="overlaps", values=overlaps_complex
)


index_simple = index_fasta(
    filename="tests/files/build_splice_graph/simple.fa",
)

index_complex = index_fasta(
    filename="tests/files/build_splice_graph/complex_transcripts.fa",
)

transcriptome_empty = {}
transcriptome_simple = index_fasta(
    filename="tests/files/build_splice_graph/transcriptome_simple.fa",
)

transcriptome_complex = index_fasta(
    filename="tests/files/build_splice_graph/transcriptome_complex.fa",
)


segments_empty = []
segments_simple = [
    'S\tENSDART00000161035.1:0-326\tTGCACGGGTTTATTGTTCACAAAGAGATCGACAATGTGCGCAACTAAAATAAACATAGTACATTTTGATTATACACGAACTTAAACTAAAGTCCAATCACACCTCCGCCCCGTTTCCACAGCAGCCTGTCAGGGTGGAGGAAAAGCGCGGCGGTCATGTGAGGCTCGAGCATCTCTCTCTCTCTCTCTCTCTCTCTCTCTACAGAATGATAGAGGGAGCTCGTGAATCACATCATAGTCGTCCTCCCCTCATTCGTCCTCTCCAGCAGACACCGAAAAACTGCGTTCATGCCAAAATGGGATGTGGAAATTCCTCCGCCACGAGCA\tLN:i:326\n'
]
segments_complex = [
    'S\tENSDART00000161035.1:0-326\tTGCACGGGTTTATTGTTCACAAAGAGATCGACAATGTGCGCAACTAAAATAAACATAGTACATTTTGATTATACACGAACTTAAACTAAAGTCCAATCACACCTCCGCCCCGTTTCCACAGCAGCCTGTCAGGGTGGAGGAAAAGCGCGGCGGTCATGTGAGGCTCGAGCATCTCTCTCTCTCTCTCTCTCTCTCTCTCTACAGAATGATAGAGGGAGCTCGTGAATCACATCATAGTCGTCCTCCCCTCATTCGTCCTCTCCAGCAGACACCGAAAAACTGCGTTCATGCCAAAATGGGATGTGGAAATTCCTCCGCCACGAGCA\tLN:i:326\n',
    'S\tENSDART00000161035.1:397-472\tAGGAACTACGGTGGAGTGTATGTGGGTCTTCCTGCTGATCTGACTGCAGTCGCTGCCAGTCAGTCCAAATCAACA\tLN:i:75\n',
    'S\tENSDART00000161035.1:477-523\tAGTCAACAGATGTTTATTGCAGACCTTCAGATAAAACAACATAGAA\tLN:i:46\n',
    'S\tENSDART00000165342.1:5-127\tTGGAGCTGAAGCCGAGTATCTTGGTATTGGACTGGAACAGAAATCCAGCAAAAACTTTAAGGGAAATCACTTTCATTTCATGATCGAAAAACTCCCGCAGATCATAAAAGAGTGGAAGGAAG\tLN:i:122\n',
    'S\tENSDART00000165342.1:125-304\tAGGACCTGTAGTAGAAACAAAACTAGGATCTCTGAGAGGTGCCTTCTTGACTGTGAAGGGCAAGGACACAATAGTCAATAGTTATCTAGGTGTGCCGTTCGCCAAGCCGCCTGTAGGACCCCTGAGACTTGCTCGACCACAGGCTGCAGAGAAATGGCAAGGAGTTAGAGATGCCACCA\tLN:i:179\n',
    'S\tENSDART00000165342.1:317-460\tGTGCCTCCAGGAAAGGCAAATGACTGTAACTGAACTGGAGTTTCTATCGATGGATGTGGAGGTTCCTGAGGTCTCGGAGGATTGCCTGTATCTTAACATCTACACCCCAGTTAAACCTGGACAAGGAGACAAGAAGTTACCAG\tLN:i:143\n',
    'S\tENSDART00000165342.1:459-592\tGTCATGGTTTGGATTCATGGTGGAGGACTCTCTCTTGGATCGGCTTCAATGTATGATGGCTCTGTTCTGGCTGCGTATCAGGATGTGGTCGTGGTGCTCATTCAGTACAGATTGGGTCTTCTGGGGTTCTTAA\tLN:i:133\n',
    'S\tENSDART00000165342.1:591-650\tAGCACCGGAGACGAGCATGCGCCAGGAAACTATGGTTTTCTGGATCAAGTAGCTGCCCT\tLN:i:59\n',
    'S\tENSDART00000165342.1:645-746\tGCCCTTCAGTGGGTTCAGGAGAACATCCACAGCTTCGGTGGAGATCCTGGATCAGTGACCATCTTTGGAGAGTCTGCTGGAGGAATCAGTGTATCCACGCT\tLN:i:101\n',
    'S\tENSDART00000165342.1:746-851\tGATTCTTTCCCCGCTGGCGTCTGGACTGTTTCATCGCGCCATTGCAGAAAGTGGAACTGCCTTCTGGGATGGTTTAGTCATGGCTGATCCTTTTCAGAGAGCCCA\tLN:i:105\n',
    'S\tENSDART00000165342.1:854-886\tTGCAGCCAAACAATGCAACTGTGACAGCAGCA\tLN:i:32\n',
    'S\tENSDART00000165342.1:899-953\tTGTCGACTGCATTATGCACTGGTCTGAAGAGGAGGCTCTGGAATGTGCTAAAAA\tLN:i:54\n',
    'S\tENSDART00000165342.1:974-1097\tCGTTGCTGTAGATTCTTATTTCCTTCCCAAACCCATCGAGGAGATTGTTGAGAAACAAGAGTTTAGTAAAGTTCCTCTCATCAACGGCATTAACAATGATGAGTTTGGCTTCTTGTTGGCTGA\tLN:i:123\n',
    'S\tENSDART00000165342.1:1098-1175\tTATTTCTTGGGTCCTGAATGGATGAATGGGTTGAAAAGAGAGCAAATCGCTGAAGCCTTGACGCTCACATATCCTGA\tLN:i:77\n',
    'S\tENSDART00000165342.1:1176-1324\tCCCAAGGATCGATGGATCATTGATCTGGTGGCGAAGGAATATCTGGGCGACACACACGACCCCATTGAAATCCGTGAAGTTTATCGGGAGATGATGGGAGACGTGCTGTTTAACATCCCTGCCCTGCAACTGGCAAAACACCACAGCG\tLN:i:148\n'
]

links_empty = []
links_simple = []
links_complex = [
    'L\tENSDART00000161035.1:0-326\t+\tENSDART00000161035.1:397-472\t+\t71G\n',
    'L\tENSDART00000161035.1:397-472\t+\tENSDART00000161035.1:477-523\t+\t5G\n',
    'L\tENSDART00000165342.1:5-127\t+\tENSDART00000165342.1:125-304\t+\t2M\n',
    'L\tENSDART00000165342.1:125-304\t+\tENSDART00000165342.1:317-460\t+\t13G\n',
    'L\tENSDART00000165342.1:317-460\t+\tENSDART00000165342.1:459-592\t+\t1M\n',
    'L\tENSDART00000165342.1:459-592\t+\tENSDART00000165342.1:591-650\t+\t1M\n',
    'L\tENSDART00000165342.1:591-650\t+\tENSDART00000165342.1:645-746\t+\t5M\n',
    'L\tENSDART00000165342.1:645-746\t+\tENSDART00000165342.1:746-851\t+\t0M\n',
    'L\tENSDART00000165342.1:746-851\t+\tENSDART00000165342.1:854-886\t+\t3G\n',
    'L\tENSDART00000165342.1:854-886\t+\tENSDART00000165342.1:899-953\t+\t13G\n',
    'L\tENSDART00000165342.1:899-953\t+\tENSDART00000165342.1:974-1097\t+\t21G\n',
    'L\tENSDART00000165342.1:974-1097\t+\tENSDART00000165342.1:1098-1175\t+\t1G\n',
    'L\tENSDART00000165342.1:1098-1175\t+\tENSDART00000165342.1:1176-1324\t+\t1G\n'
]

containments_empty = []
containments_simple = [
    'C\tENSDART00000161035.1\t+\tENSDART00000161035.1:0-326\t+\t0\t326M\n'
]
containments_complex = [
    'C\tENSDART00000161035.1\t+\tENSDART00000161035.1:0-326\t+\t0\t326M\n',
    'C\tENSDART00000161035.1\t+\tENSDART00000161035.1:397-472\t+\t397\t75M\n',
    'C\tENSDART00000161035.1\t+\tENSDART00000161035.1:477-523\t+\t477\t46M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:5-127\t+\t5\t122M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:125-304\t+\t125\t179M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:317-460\t+\t317\t143M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:459-592\t+\t459\t133M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:591-650\t+\t591\t59M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:645-746\t+\t645\t101M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:746-851\t+\t746\t105M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:854-886\t+\t854\t32M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:899-953\t+\t899\t54M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:974-1097\t+\t974\t123M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:1098-1175\t+\t1098\t77M\n',
    'C\tENSDART00000165342.1\t+\tENSDART00000165342.1:1176-1324\t+\t1176\t148M\n'
]

paths_empty = []
paths_simple = [
    'P\tENSDART00000161035.1\tENSDART00000161035.1:0-326+\n'
]
paths_complex = [
    'P\tENSDART00000161035.1\tENSDART00000161035.1:0-326+,ENSDART00000161035.1:397-472+,ENSDART00000161035.1:477-523+\n',
    'P\tENSDART00000165342.1\tENSDART00000165342.1:5-127+,ENSDART00000165342.1:125-304+,ENSDART00000165342.1:317-460+,ENSDART00000165342.1:459-592+,ENSDART00000165342.1:591-650+,ENSDART00000165342.1:645-746+,ENSDART00000165342.1:746-851+,ENSDART00000165342.1:854-886+,ENSDART00000165342.1:899-953+,ENSDART00000165342.1:974-1097+,ENSDART00000165342.1:1098-1175+,ENSDART00000165342.1:1176-1324+\n'
]

empty_gfa = "tests/files/io/empty.gfa"
simple_gfa = "tests/files/io/simple.gfa"
complex_gfa = "tests/files/io/complex.gfa"

empty_exons = "tests/files/io/empty_exons.fa"
simple_exons = "tests/files/io/simple_exons.fa"
complex_exons = "tests/files/io/complex_exons.fa"
complex_exons_soft = "tests/files/io/complex_exons_soft.fa"
complex_exons_hard = "tests/files/io/complex_exons_hard.fa"

empty_gapped = "tests/files/io/empty_gapped.fa"
simple_gapped = "tests/files/io/simple_gapped.fa"
complex_gapped = "tests/files/io/complex_gapped.fa"
complex_gapped_soft = "tests/files/io/complex_gapped_soft.fa"
complex_gapped_hard = "tests/files/io/complex_gapped_hard.fa"
