#!/usr/bin/env python3

import argparse

parser = argparse.ArgumentParser(
    usage = 'paste_exons -i exons.fa -g 100 -o exons_pasted.fa',
    description='Paste exons into a single record. Fill the gap between them '
        'with Ns',
    epilog = 'Jorge Langa. Send issues and pull requests to github.com/jlanga/'
        'exon_finder'
)

parser.add_argument(
    '--input-fasta',
    '-i',
    type = str,
    required = True,
    help = 'Input exons in FASTA format',
    dest = 'input_fasta',
    metavar = 'FILE'
)


parser.add_argument(
    '--gap-size',
    '-g',
    type = int,
    required = False,
    default = 100,
    help = 'Number of Ns to put between exons',
    dest = 'gap_size',
    metavar = 'INT'
)

parser.add_argument(
    '--output-fasta',
    '-o',
    type = str,
    required = True,
    help = 'Output fasta',
    dest = "output_fasta",
    metavar = "FILE"
)

args = parser.parse_args()

if __name__ == '__main__':

    args = vars(parser.parse_args())
    input_fasta = args["input_fasta"]
    gap_size = args["gap_size"]
    output_fasta = args["output_fasta"]

    # Check inputs
    from os.path import isfile
    assert isfile(input_fasta), "ERROR!: Input fasta not found"
    assert gap_size > 0, "ERROR!: gap_size is not a positive integer"
    

    from Bio import SeqIO
    from exfi.paste_sequences_with_ns import paste_sequences_with_ns

    # Read
    records = SeqIO.parse(handle= input_fasta, format= "fasta")
    #[print(record) for record in records]
    records_pasted = paste_sequences_with_ns(records, number_of_ns= gap_size)
    #[print(record) for record in records_pasted]
    SeqIO.write(sequences= records_pasted, handle= output_fasta, format= "fasta")