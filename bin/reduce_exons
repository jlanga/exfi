#!/usr/bin/env python3

import argparse

parser = argparse.ArgumentParser(
    usage = 'reduce_exons -e raw_exons.fa -o reduced_exons.fa',
    description='Reduce a set of exons by sequence',
    epilog = 'Jorge Langa. Send issues and pull requests to github.com/jlanga/'
        'exon_finder'
)

parser.add_argument(
    '--input-fasta',
    '-e',
    type = str,
    required = True,
    help = 'Input set of exons in FASTA format',
    dest = 'input_fasta',
    metavar = 'FILE'
)

parser.add_argument(
    '--output-fasta',
    '-o',
    type = str,
    required = False,
    help = 'Path to output fasta file',
    dest = "output_fasta",
    metavar = "FILE"
)

args = parser.parse_args()



if __name__ == "__main__":
    
    import sys
    
    args = vars(parser.parse_args())
    input_fasta = args["input_fasta"]
    output_fasta = args["output_fasta"]

    # check inputs
    from os.path import isfile
    assert isfile(input_fasta), "ERROR!: input_fasta not found"

    # Process
    from Bio import SeqIO
    from exfi.reduce_exons import reduce_exons
    
    input_records = SeqIO.read(handle= input_fasta, format= "fasta")
    exons = reduce_exons(input_records)
    SeqIO.write(sequences= exons, handle= output_fasta, format= "fasta")
