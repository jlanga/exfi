#!/usr/bin/env python3


if __name__ == '__main__':

    input_fasta = "results/exons_full_transcriptome.fa"
    input_bloom = "results/genome_k27_m8G_l1.bloom"
    kmer = 27
    output_fasta = "test_filter_by_extendibility.fa"

    from exfi.read_fasta import read_fasta
    from exfi.extend import extend_left, extend_right
    from subprocess import Popen, PIPE
    from itertools import tee, chain
    # Read input,
    exons = read_fasta(input_fasta)
    # Compute left and right extensions
    exons1, exons2 = tee(exons)
    exons_left = extend_left(exons1, kmer)
    exons_right = extend_right(exons1, kmer)
    exons_extended = chain(exons_left, exons_right)
    # Write them into temp file
    from tempfile import NamedTemporaryFile
    prefix = NamedTemporaryFile()
    extensions_raw = prefix.name + "_raw.fa"
    extensions_filtered = prefix.name + "_filtered.fa"
    write_fasta(exons_extended, extensions_raw)
    # Find which were extendable
    command_kmers = [  # Run abyss-bloom kmers
    "abyss-bloom", "kmers",
        "--kmer", str(kmer),
        "--verbose",
        "--bed",
        bloom_filter_fn,
        extensions_raw
    ]
    process_kmers = Popen(command_kmers)
    outs, errs = sealer_process.communicate()
    # If left extendable, return as si
    # Else, trim one base
    # If right extendable , return as is
    # Else, trim one base
    # Write exons