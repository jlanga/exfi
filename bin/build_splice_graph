#!/usr/bin/env python3

"""build_splice_graph: given a bloom filter of genomic kmers, predict exons in
a transcriptome.
"""

import logging

from os.path import abspath

from exfi.arguments import build_splice_graph_args
from exfi.logger import set_up_logger
from exfi.find_exons import find_exons
from exfi.io.bed import bed3_to_bed4
from exfi.io.fasta_to_dict import fasta_to_dict
from exfi.polish import polish_bed4
from exfi.correct import correct_bed4
from exfi.io.bed4_to_gfa1 import bed4_to_gfa1


if __name__ == "__main__":

    PARSER = build_splice_graph_args()

    ARGS = vars(PARSER.parse_args())
    # Convert relative paths to absolute paths, just in case
    ARGS["bloom"] = abspath(ARGS["bloom"])
    ARGS["fasta"] = abspath(ARGS["fasta"])
    ARGS["gfa1"] = abspath(ARGS["gfa1"])

    # Set up the logger
    LOGGER = set_up_logger(ARGS)

    # Get predicted exons in bed format
    BED4 = bed3_to_bed4(find_exons(ARGS))

    # Transcriptome_dict
    TRANSCRIPTOME_DICT = fasta_to_dict(ARGS["fasta"])

    if ARGS["polish"]:
        BED4 = polish_bed4(bed4=BED4, transcriptome_dict=TRANSCRIPTOME_DICT)

    if ARGS["correct"]:
        BED4 = correct_bed4(
            bed4=BED4, transcriptome_dict=TRANSCRIPTOME_DICT, args=ARGS
        )

    # Write to GFA1
    bed4_to_gfa1(
        gfa1_fn=ARGS["gfa1"], bed4=BED4, transcriptome_dict=TRANSCRIPTOME_DICT,
        collapse=ARGS['collapse']
    )

    logging.info("Done!")
